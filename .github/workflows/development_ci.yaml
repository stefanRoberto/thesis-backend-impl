name: Backend CI workflow
on:
  pull_request:
    branches:
      - development
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python 3.11 and install dependencies
        uses: ./.github/actions/python_setup
        with:
          extra-dependencies: flake8==7.1.0
          cache-tag: lint

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          MYSQL_USER: ${{ vars.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ vars.DB_NAME }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python 3.11 and install dependencies
        uses: ./.github/actions/python_setup
        with:
          extra-dependencies: pytest==8.2.2 pytest-cov==5.0.0
          cache-tag: test

      - name: Create .env file
        run: |
          touch .env
          echo "DB_USERNAME=${{ vars.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ vars.DB_NAME }}" >> .env

      - name: Wait for MySQL to initialize
        run: |
          for i in {1..10}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is accepting connections!" && break
            echo "Waiting for MySQL to accept connections..."
            sleep 5
          done

      - name: Run unit tests with pytest and get coverage rate
        run: |
          pytest ./tests/services/ --cov=./app/services --cov-fail-under=100 --cov-report=term-missing \
          -W ignore::DeprecationWarning -vv

      - name: Run integration tests with pytest and get coverage rate
        run: |
          pytest ./tests/routers/ --cov=./app/routers --cov-fail-under=100 --cov-report=term-missing \
          -W ignore::DeprecationWarning -vv